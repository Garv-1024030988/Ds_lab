#include <iostream>
using namespace std;

void multi(int rowsA, int colsA, int rowsB, int colsB, int matrixA[50][50], int matrixB[50][50], int result[50][50]) {
    if (colsA != rowsB) {
        cout << "Invalid multiplication: Columns of A must match Rows of B" << endl;
        return;
    }

    for (int i = 0; i < rowsA; i++) {
        for (int j = 0; j < colsB; j++) {
            result[i][j] = 0;
            for (int k = 0; k < colsA; k++) {
                result[i][j] += matrixA[i][k] * matrixB[k][j];
            }
        }
    }
}

void display(int rows, int cols, int matrix[50][50]) {
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            cout << matrix[i][j] << " ";
        }
        cout << endl;
    }
}

int main() {
    int rowsA, colsA;
    cout << "Enter rows and columns for matrix A: ";
    cin >> rowsA >> colsA;

    int matrixA[5][5];
    cout << "Enter elements of matrix A:" << endl;
    for (int i = 0; i < rowsA; i++) {
        for (int j = 0; j < colsA; j++) {
            cin >> matrixA[i][j];
        }
    }

    int rowsB, colsB;
    cout << "Enter rows and columns for matrix B: ";
    cin >> rowsB >> colsB;

    int matrixB[5][5];
    cout << "Enter elements of matrix B:" << endl;
    for (int i = 0; i < rowsB; i++) {
        for (int j = 0; j < colsB; j++) {
            cin >> matrixB[i][j];
        }
    }

    int result[5][5];
    if (colsA != rowsB) {
        cout << "Matrix multiplication not possible." << endl;
    } else {
        multi(rowsA, colsA, rowsB, colsB, matrixA, matrixB, result);
        cout << "Resultant Matrix:" << endl;
        display(rowsA, colsB, result);
    }

    return 0;
}
